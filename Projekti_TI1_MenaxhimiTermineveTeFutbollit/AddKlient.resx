<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHelp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>